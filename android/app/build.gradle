apply plugin: 'com.android.application'

android {
    namespace "com.bilal.todoexpress"
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.bilal.todoexpress"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        aaptOptions {
            // nettoyage des assets (valeur par défaut adaptée aux apps web embarquées)
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*~:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Java 11 (compatible avec Gradle 8.4)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

// Dépôts locaux pour les plugins Cordova éventuels
repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

/** ---- Fix "Duplicate class" (Kotlin 1.8+ a fusionné jdk7/jdk8 dans stdlib) ---- */
configurations.all {
    exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk7"
    exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk8"
}
// (facultatif mais utile) fige la version Kotlin utilisée par les libs
dependencies {
    implementation platform("org.jetbrains.kotlin:kotlin-bom:1.8.22")

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX (versions dans android/variables.gradle)
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"

    // Capacitor
    implementation project(':capacitor-android')

    // Tests
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"

    // (si tu utilises des plugins Cordova côté Android)
    implementation project(':capacitor-cordova-android-plugins')
}

// Laisse Capacitor compléter (ajout de plugins natifs, etc.)
apply from: 'capacitor.build.gradle'

// Kotlin JVM 11 — version "safe" (pas de référence directe à KotlinCompile)
tasks.matching { it.name.toLowerCase().contains('kotlin') }.configureEach {
    if (it.hasProperty('kotlinOptions')) {
        it.kotlinOptions.jvmTarget = '17'
    }
}

// Optionnel : Google Services si un jour on ajoute google-services.json
try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch (Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied.")
}
