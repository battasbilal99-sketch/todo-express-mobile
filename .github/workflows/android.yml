name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: android-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web (Vite/React)
        run: npm run build

      # Copie les assets web dans le projet Android + synchronise Capacitor sans prompt
      - name: Sync Capacitor (Android)
        run: npx cap sync android --no-interactive

      # Java 17 + cache Gradle intÃ©grÃ©
      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Make gradlew executable
        working-directory: android
        run: chmod +x ./gradlew

      - name: Build Debug APK
        working-directory: android
        run: ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Build Release APK (unsigned)
        working-directory: android
        run: ./gradlew :app:assembleRelease --stacktrace --no-daemon

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-${{ github.sha }}
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 30

      - name: Upload Release APK (unsigned)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned-${{ github.sha }}
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 30

      - name: Build Summary (APK info)
        working-directory: android
        shell: bash
        run: |
          echo "## ðŸ“± APK Build Info" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"

          if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
            echo "### Debug APK" >> "$GITHUB_STEP_SUMMARY"
            DEBUG_SIZE=$(stat -f%z app/build/outputs/apk/debug/app-debug.apk 2>/dev/null || stat -c%s app/build/outputs/apk/debug/app-debug.apk)
            DEBUG_SIZE_MB=$((DEBUG_SIZE / 1024 / 1024))
            echo "- **Taille**: ${DEBUG_SIZE_MB} MB" >> "$GITHUB_STEP_SUMMARY"
            echo "- **SHA-256**: $(sha256sum app/build/outputs/apk/debug/app-debug.apk | cut -d' ' -f1)" >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"
          fi

          if [ -f app/build/outputs/apk/release/app-release-unsigned.apk ]; then
            echo "### Release APK (unsigned)" >> "$GITHUB_STEP_SUMMARY"
            RELEASE_SIZE=$(stat -f%z app/build/outputs/apk/release/app-release-unsigned.apk 2>/dev/null || stat -c%s app/build/outputs/apk/release/app-release-unsigned.apk)
            RELEASE_SIZE_MB=$((RELEASE_SIZE / 1024 / 1024))
            echo "- **Taille**: ${RELEASE_SIZE_MB} MB" >> "$GITHUB_STEP_SUMMARY"
            echo "- **SHA-256**: $(sha256sum app/build/outputs/apk/release/app-release-unsigned.apk | cut -d' ' -f1)" >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"
          fi

          echo "### ðŸ“¥ TÃ©lÃ©chargement" >> "$GITHUB_STEP_SUMMARY"
          echo "Les APK sont disponibles dans les *Artifacts* de ce workflow." >> "$GITHUB_STEP_SUMMARY"
