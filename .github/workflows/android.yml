name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20'            # <â€” or '22' (no patch), but 20 LTS is safest
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci || npm install --legacy-peer-deps

      - name: Build React app
        run: npm run build

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        working-directory: android
        run: chmod +x ./gradlew

      - name: Build Debug APK
        working-directory: android
        run: ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Build Release APK (unsigned)
        working-directory: android
        run: ./gradlew :app:assembleRelease --stacktrace --no-daemon

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-${{ github.sha }}
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 30

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned-${{ github.sha }}
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 30

      - name: Generate APK Info
        working-directory: android
        shell: bash
        run: |
          echo "## ðŸ“± APK Build Info" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Debug APK" >> $GITHUB_STEP_SUMMARY
          DEBUG_APK="app/build/outputs/apk/debug/app-debug.apk"
          if [ -f "$DEBUG_APK" ]; then
            DEBUG_SIZE=$(stat -f%z "$DEBUG_APK" 2>/dev/null || stat -c%s "$DEBUG_APK")
            DEBUG_SIZE_MB=$((DEBUG_SIZE / 1024 / 1024))
            echo "- **Taille**: ${DEBUG_SIZE_MB} MB" >> $GITHUB_STEP_SUMMARY
            echo "- **SHA-256**: $(sha256sum "$DEBUG_APK" | cut -d' ' -f1)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- (Non gÃ©nÃ©rÃ©)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "### Release APK" >> $GITHUB_STEP_SUMMARY
          RELEASE_APK="app/build/outputs/apk/release/app-release-unsigned.apk"
          if [ -f "$RELEASE_APK" ]; then
            RELEASE_SIZE=$(stat -f%z "$RELEASE_APK" 2>/dev/null || stat -c%s "$RELEASE_APK")
            RELEASE_SIZE_MB=$((RELEASE_SIZE / 1024 / 1024))
            echo "- **Taille**: ${RELEASE_SIZE_MB} MB" >> $GITHUB_STEP_SUMMARY
            echo "- **SHA-256**: $(sha256sum "$RELEASE_APK" | cut -d' ' -f1)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- (Non gÃ©nÃ©rÃ©)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¥ TÃ©lÃ©chargement" >> $GITHUB_STEP_SUMMARY
          echo "Les APK sont disponibles dans les artefacts de ce workflow." >> $GITHUB_STEP_SUMMARY
